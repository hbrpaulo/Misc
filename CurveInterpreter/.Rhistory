library(flexsurv)
fitg <- flexsurvreg(formula = Surv(futime, fustat) ~ age, data = ovarian, dist = "gengamma")
cs <- coxsnell_flexsurvreg(fitg)
## Model appears to fit well, with some small sample noise
surv <- survfit(Surv(cs$est, ovarian$fustat) ~ 1)
plot(surv, fun="cumhaz")
abline(0, 1, col="red")
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .1, n = 200)
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .1, n = 200)
rm(func)
resi_cs <- func(seed = 100, divisor = .1, n = 200);rm(func)
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .1, n = 200);rm(func)
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .1, n = 200);rm(func)
# separacao de inicio|meio|fim usando quantis ----
resi_cs_middle <- resi_cs %>%
filter(between(x, attr(resi_cs, 'beginning'),
attr(resi_cs, 'ending')))
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
# geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
# geom_vline(xintercept = attr(resi_cs, 'ending'), linetype = 'dashed') +
facet_wrap(~part, scales = 'free_x')
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .1, n = 200);rm(func)
# separacao de inicio|meio|fim usando quantis ----
resi_cs_middle <- resi_cs %>%
filter(between(x, attr(resi_cs, 'beginning'),
attr(resi_cs, 'end')))
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'free_x')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'both')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'free_y')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'free')
resi_cs <- func(seed = 100, divisor = .2, n = 200);rm(func)
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .2, n = 200);rm(func)
# separacao de inicio|meio|fim usando quantis ----
resi_cs_middle <- resi_cs %>%
filter(between(x, attr(resi_cs, 'beginning'),
attr(resi_cs, 'end')))
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'free')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'fixed')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
#geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
#geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed') +
facet_wrap(~part, scales = 'fixed')
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed')# + facet_wrap(~part, scales = 'fixed')
plot(resi_cs$diffs1, type = 'l')
# tendencia total
aTSA::trend.test(resi_cs_middle$diffs2)
# tendencia separada
resi_cs_middle %>%
group_by()
# tendencia separada
resi_cs_middle %>%
group_by(part)
aTSA::trend.test(resi_cs_middle$diffs2)
aTSA::trend.test(resi_cs_middle$diffs2) %>% names
# tendencia separada
resi_cs_middle %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)
# tendencia separada
resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)
# tendencia total
aTSA::trend.test(resi_cs$diffs2)
# tendencia separada
resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)
resi_cs[which(resi_cs$part=='beginning')]
resi_cs[which(resi_cs$part=='beginning'),]
resi_cs[which(resi_cs$part=='beginning'), 'diffs2']
aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'), 'diffs2'])
resi_cs[which(resi_cs$part=='beginning'), 'diffs2']
aTSA::trend.test(as.vector(resi_cs[which(resi_cs$part=='beginning'), 'diffs2']))
resi_cs[which(resi_cs$part=='beginning'), 'diffs2']
as.vector(resi_cs[which(resi_cs$part=='beginning'), 'diffs2'])
resi_cs[which(resi_cs$part=='beginning')$diffs2
resi_cs[which(resi_cs$part=='beginning')]$diffs2
resi_cs[which(resi_cs$part=='beginning')]$diffs2
resi_cs[which(resi_cs$part=='beginning')]
which(resi_cs$part=='beginning')
which(resi_cs$part=='beginning')
resi_cs[which(resi_cs$part=='beginning')]
resi_cs[which(resi_cs$part=='beginning')]
resi_cs[which(resi_cs$part=='beginning'),]
resi_cs[which(resi_cs$part=='beginning'),]$diffs2
aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)
aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value
microbenchmark::microbenchmark(
{resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)})
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)})
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value}
)
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value}, times = 10
)
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value}, times = 100
)
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
#datatable = {}
times = 100
) %>% plot
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
#datatable = {}
times = 100
) %>% plot
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
#datatable = {}
times = 100
) %>% plot
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
#datatable = {}
times = 100
) %>% autoplot()
data.table(a = rep(letters[1:4], each = 3), b = rep(c("a", "b"), each = 6), c = rnorm(12))
data.table(a = rep(letters[1:4], each = 3), b = rep(c("a", "b"), each = 6), c = rnorm(12))
library(data.table)
data.table(a = rep(letters[1:4], each = 3), b = rep(c("a", "b"), each = 6), c = rnorm(12))
library(data.table)
x <- data.table(a = rep(letters[1:4], each = 3), b = rep(c("a", "b"), each = 6), c = rnorm(12))
myfun <- function(y) paste(y$a, y$b, y$c, collapse = "")
sapply(split(x, f = list(x$b, x$a)), FUN = myfun)
x[, myfun(c(list(b, a), .SD)), by = .(b, a)]
x
df[, Mean:=mean(c), by=Model]
df[, Mean:=mean(c), by=list(Model)]
df[, Mean:=mean(c), by=list(b)]
x[, Mean:=mean(c), by=list(b)]
x
x[, Mean:=mean(c), by=list(b)]
dff <- x[, Mean:=mean(c), by=list(b)]
dff
View(dff)
dff <- x[, Mean=mean(c), by=list(b)]
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
datatable = {}
times = 1000
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
times = 1000
) %>% autoplot()
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
times = 1000
) %>% autoplot()
data <- data.frame(Number=c(1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2),
Treatment=c("High","High","High","High","High","High","Low",
"Low","Low","Low","Low","Low","High","High","High",
"High","High","High","Low","Low","Low","Low","Low",
"Low"),
FW=c(746,500,498,728,626,580,1462,738,1046,568,320,578,654,664,
660,596,1110,834,486,548,688,776,510,788))
library(data.table)
DT <- data.table(data)
DT[,
.(W = shapiro.test(FW)$statistic, P.value = shapiro.test(FW)$p.value),
by = .(Number, Treatment)]
DT[,
.(P.value = shapiro.test(FW)$p.value),
by = .(Number, Treatment)]
DT[,
.(P.value = shapiro.test(FW)$p.value),
by = .(Treatment)]
aggregate(formula = FW ~ Number + Treatment,
data = data,
FUN = function(x) {y <- shapiro.test(x); c(y$statistic, y$p.value)})
data.table(resi_cs)
data.table(resi_cs)[, pvalue = aTSA::trend.test(diffs2)$p.value,
by = .(part)]
data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
{data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]}
times = 1000
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
{data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]},
times = 1000
) %>% autoplot()
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
datatable = {data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]},
times = 100
) %>% autoplot()
aggregate(formula = diffs2 ~ part,
data = resi_cs,
FUN = function(x) {aTSA::trend.test(x$diffs2)$p.value)})
aggregate(formula = diffs2 ~ part,
data = resi_cs,
FUN = function(x) {aTSA::trend.test(x$diffs2)$p.value})
aggregate(formula = diffs2 ~ part,
data = resi_cs,
FUN = function(x) {aTSA::trend.test(x$diffs2)$p.value})
resi_cs
aggregate(formula = diffs2 ~ part,
data = resi_cs$diffs2,
FUN = function(x) {aTSA::trend.test(x)$p.value})
aggregate(formula = diffs2 ~ part,
data = resi_cs$diffs2,
FUN = function(x) {aTSA::trend.test(x)$p.value})
aggregate(formula = diffs2 ~ part,
data = resi_cs,
FUN = function(x) {aTSA::trend.test(x$diffs2)$p.value})
aggregate(formula = FW ~ Number + Treatment,
data = data,
FUN = function(x) {y <- shapiro.test(x); c(y$statistic, y$p.value)})
data
data %>%
group_by(!!sym(groupvar)) %>%
group_nest() %>%
mutate(shapiro = map(.data$data, ~ shapiro_test(.x, !!sym(quantvar)))) %>%
select(-data) %>%
unnest(cols = shapiro) %>%
print()
data %>%
group_nest() %>%
mutate(shapiro = map(.data$data, ~ shapiro_test(.x, !!sym(quantvar)))) %>%
select(-data) %>%
unnest(cols = shapiro) %>%
print()
data %>%
group_by(Number, Treatment) %>%
summarise(statistic = shapiro.test(FW)$statistic,
p.value = shapiro.test(FW)$p.value)
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
datatable = {data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]},
times = 100
) %>% autoplot()
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .2, n = 200);rm(func)
# atual ----
# separacao de inicio|meio|fim usando quantis ----
resi_cs_middle <- resi_cs %>%
filter(between(x, attr(resi_cs, 'beginning'),
attr(resi_cs, 'end')))
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed')# + facet_wrap(~part, scales = 'fixed')
plot(resi_cs$diffs1, type = 'l')
# tendencia total
aTSA::trend.test(resi_cs$diffs2)
# tendencia separada
aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
datatable = {data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]},
times = 100
) %>% autoplot()
rm(list = ls())
library(tidyverse)
library(tibble)
theme_set(theme_classic())
source('scripts/example_creation.R')
resi_cs <- func(seed = 100, divisor = .2, n = 200);rm(func)
# atual ----
# separacao de inicio|meio|fim usando quantis ----
resi_cs_middle <- resi_cs %>%
filter(between(x, attr(resi_cs, 'beginning'),
attr(resi_cs, 'end')))
ggplot(data = resi_cs, aes(x = x, y = res)) +
geom_line() +
geom_line(aes(x = x, y = ref), col = 'red') +
geom_line(aes(x = x, y = ref_inf), col = 'red', lty = 2) +
geom_line(aes(x = x, y = ref_sup), col = 'red', lty = 2) +
geom_vline(xintercept = attr(resi_cs, 'beginning'), linetype = 'dashed') +
geom_vline(xintercept = attr(resi_cs, 'end'), linetype = 'dashed')# + facet_wrap(~part, scales = 'fixed')
plot(resi_cs$diffs1, type = 'l')
# tendencia total
aTSA::trend.test(resi_cs$diffs2)
# tendencia separada
aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value
microbenchmark::microbenchmark(
tidyv = {resi_cs %>%
group_by(part) %>%
summarise(pvalue = aTSA::trend.test(diffs2)$p.value)},
baseR = {aTSA::trend.test(resi_cs[which(resi_cs$part=='beginning'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='middle'),]$diffs2)$p.value
aTSA::trend.test(resi_cs[which(resi_cs$part=='end'),]$diffs2)$p.value},
datatable = {data.table(resi_cs)[, .(pvalue = aTSA::trend.test(diffs2)$p.value),
by = .(part)]},
times = 100
) %>% autoplot()
